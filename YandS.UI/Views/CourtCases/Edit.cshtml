@model YandS.UI.Models.CourtCases
@{
    ViewBag.Title = "Y & S Associates - Modify Case";
}
<script type="text/javascript">
        var PrimaryLoaded = false;
        var ApealLoaded = false;
        var SupremeLoaded = false;
        var EnforcementLoaded = false;
        var TabName = "";
        var CourtDetailContainer = "";
        var ListFollowupContainer = "";
        var CreateFollowupContainer = "";
        var P_Courtid = "0";
        var P_hidCourtDetail = "";
        var P_CaseId = 0;
        var P_Detail = 0;
        var _parameters = {};
        var ArrayCourts = [];

        var GetCourtDetailURL = '@Url.Action("GetTab", "CourtCases", new { area = string.Empty })';
        var CreateCourtDetailURL = '@Url.Action("CreateCourtDetail", "CourtCases", new { area = string.Empty })';
        var CreatePrimaryCourtDetailURL = '@Url.Action("CreatePrimaryCourtDetail", "CourtCases", new { area = string.Empty })';
        var CreateApealCourtDetailURL = '@Url.Action("CreateApealCourtDetail", "CourtCases", new { area = string.Empty })';
        var CreateSupremeCourtDetailURL = '@Url.Action("CreateSupremeCourtDetail", "CourtCases", new { area = string.Empty })';
        var CreateEnforcementCourtDetailURL = '@Url.Action("CreateEnforcementCourtDetail", "CourtCases", new { area = string.Empty })';
        var GetListFollowupURL = '@Url.Action("GetHearingDetail", "CourtCases", new { area = string.Empty })';
        var CreateFollowupURL = '@Url.Action("CreateCourtFollowup", "CourtCases", new { area = string.Empty })';

    var GetTab = function (divToLoad, p_url, p_parameters) {
        divToLoad.empty();
        divToLoad.append("Loading...");

        $.ajax({
            url: p_url,
            type: "GET",
            data: p_parameters,
            success: function (data, textStatus, jqXHR) {
                LoadPartialView(data, divToLoad);
            }
        });
    };

    function LoadPartialView(data, container) {
        console.log(container);
        container.empty();
        container.append("Loading...");
        container.html(data);
    }

    function LoadCreateHearingForm(Detail_id) {
        _parameters = { DetailId: Detail_id, Courtid: P_Courtid };
        GetTab(CreateFollowupContainer, CreateFollowupURL, _parameters);
    }
    function LoadHearingList(Detail_id) {
        _parameters = { DetailId: Detail_id, Courtid: P_Courtid };
        GetTab(ListFollowupContainer, GetListFollowupURL, _parameters);
    }

    function LoadHearings(Detail_id) {
        _parameters = { DetailId: Detail_id, Courtid: P_Courtid };
        GetTab(CreateFollowupContainer, CreateFollowupURL, _parameters);
        GetTab(ListFollowupContainer, GetListFollowupURL, _parameters);
    }
</script>

<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <section class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h1>MANAGE COURT CASES</h1>
                </div>
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item">COURT CASE</li>
                        <li class="breadcrumb-item active"><a href="#">MODIFY COURT CASES</a></li>
                    </ol>
                </div>
            </div>
        </div><!-- /.container-fluid -->
    </section>

    <!-- Main content -->
    <section class="content">
        @using (Html.BeginForm(null, null, FormMethod.Post, new { onsubmit = "return onPreSubmit(this);" }))
        {
            <div class="card card-info">
                <div class="card-header">
                    <div class="text-center">
                        <h4>@Html.DisplayFor(model => model.OfficeFileNo) : @Html.DisplayFor(model => model.ClientName) : @Html.DisplayFor(model => model.Defendant)</h4>
                    </div>
                </div>
                <!-- /.card-header -->
                <!-- form start -->
                <div class="card-body">


                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.CaseId)
                        @Html.HiddenFor(model => model.CreatedBy)
                        @Html.HiddenFor(model => model.CreatedOn)
                        @Html.HiddenFor(model => model.ODBLoanCode)
                        @Html.HiddenFor(model => model.SelectedBeforeCourt)
                        @Html.HiddenFor(model => model.IsCommission)
                        @Html.HiddenFor(model => model.IsPrivateFee)
                        @Html.HiddenFor(model => model.CaseStatus)
                        @Html.HiddenFor(model => model.PoliceNo)
                        @Html.HiddenFor(model => model.PublicProsecutionNo)
                        @Html.HiddenFor(model => model.PAPCNo)
                        @Html.HiddenFor(model => model.LaborConflicNo)
                        @Html.HiddenFor(model => model.PoliceStation)
                        @Html.HiddenFor(model => model.PublicPlace)
                        @Html.HiddenFor(model => model.PAPCPlace)
                        @Html.HiddenFor(model => model.LaborConflicPlace)

                        <div class="card card-info card-outline card-outline-tabs">
                            <div class="card-header p-0 border-bottom-0">
                                <ul class="nav nav-tabs" id="CourtCase-tab" role="tablist">
                                    <li class="nav-item">
                                        <a class="nav-link active" id="CaseInformaton-tab" data-toggle="pill" href="#tabs-CaseInformaton" role="tab" aria-controls="tabs-CaseInformaton" aria-selected="true">CASE REGISTRATION</a>
                                    </li>
                                    <li class="nav-item">
                                        <a class="nav-link" id="BeforeCourt-tab" data-toggle="pill" href="#tabs-BeforeCourt" role="tab" aria-controls="tabs-BeforeCourt" aria-selected="false">BEFORE COURT INFORMATION</a>
                                    </li>
                                </ul>
                            </div>
                            <div class="card-body">
                                <div class="tab-content" id="CourtCase-tabContent">
                                    <div class="tab-pane fade show active" id="tabs-CaseInformaton" role="tabpanel" aria-labelledby="CaseInformaton-tab">
                                        <div class="row">
                                            <div class="col-sm-4">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.OfficeFileNo)
                                                    @Html.EditorFor(model => model.OfficeFileNo, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                                </div>
                                                <div class="col-sm-12">
                                                    <div class="row">
                                                        @Html.LabelFor(model => model.ClientCode)
                                                        <div class="input-group mb-3">
                                                            @Html.DropDownList("ClientCode", null, htmlAttributes: new { @class = "form-control select2bs4", @tabindex = "3" })
                                                            <div class="input-group-append">
                                                                <button type="button" class="btn btn-info AddNewMaster" id="241">
                                                                    ADD
                                                                </button>
                                                            </div>
                                                        </div>
                                                        @Html.ValidationMessageFor(model => model.ClientCode, "", new { @class = "text-danger" })

                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label id="divDefClient" class="AppHidden" for="Defendant">PLAINTIFF NAME</label>
                                                    <label id="divDefendant" class="" for="Defendant">DEFENDANT NAME</label>
                                                    @Html.EditorFor(model => model.Defendant, new { htmlAttributes = new { @class = "form-control", @tabindex = "6" } })
                                                    @Html.ValidationMessageFor(model => model.Defendant, "", new { @class = "text-danger" })

                                                </div>
                                                <div class="col-sm-12">
                                                    <div class="row">
                                                        @Html.LabelFor(model => model.AccountContractNo)
                                                        <div class="input-group mb-3">
                                                            @Html.EditorFor(model => model.AccountContractNo, new { htmlAttributes = new { @class = "form-control", @tabindex = "9" } })
                                                            <div class="input-group-append">
                                                                <button type="button" id="btn-AccountContractNo" class="btn btn-warning" onclick="generate_modal_body('AccountContractNo')">CHECK</button>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.CaseTypeCode)
                                                    @Html.DropDownList("CaseTypeCode", null, htmlAttributes: new { @class = "form-control select2bs4", @tabindex = "12" })
                                                </div>
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.ReceiveLevelCode)
                                                    @Html.DropDownList("ReceiveLevelCode", null, htmlAttributes: new { @class = "form-control select2bs4", @tabindex = "15" })
                                                </div>
                                            </div>
                                            <div class="col-sm-4">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.ReceptionDate)
                                                    @Html.EditorFor(model => model.ReceptionDate, new { htmlAttributes = new { @class = "form-control datepicker", @tabindex = "1" } })
                                                    @Html.ValidationMessageFor(model => model.ReceptionDate, "", new { @class = "text-danger" })
                                                </div>
                                                <div class="col-sm-12">
                                                    <div class="row">
                                                        @Html.LabelFor(model => model.ClientCaseType)
                                                        <div class="input-group mb-3">
                                                            @Html.DropDownList("ClientCaseType", null, htmlAttributes: new { @class = "form-control select2bs4", @tabindex = "4" })
                                                            <div class="input-group-append">
                                                                <button type="button" class="btn btn-info AddNewMaster" id="285">
                                                                    ADD
                                                                </button>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-sm-12">
                                                    <div class="row">
                                                        <div class="col-sm-8">
                                                            @Html.LabelFor(model => model.IdRegistrationNo)
                                                            <div class="input-group mb-3">
                                                                @Html.EditorFor(model => model.IdRegistrationNo, new { htmlAttributes = new { @class = "form-control", @tabindex = "7" } })
                                                                <div class="input-group-append">
                                                                    <button type="button" id="btn-IdRegistrationNo" class="btn btn-warning" onclick="generate_modal_body('IdRegistrationNo')">CHECK</button>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-4">
                                                            @Html.LabelFor(model => model.OmaniExp)
                                                            <div class="input-group">
                                                                @Html.DropDownList("OmaniExp", null, htmlAttributes: new { @class = "form-control select2bs4", @tabindex = "7" })

                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-sm-12">
                                                    <div class="row">
                                                        @Html.LabelFor(model => model.ClientFileNo)
                                                        <div class="input-group mb-3">
                                                            @Html.EditorFor(model => model.ClientFileNo, new { htmlAttributes = new { @class = "form-control", @tabindex = "10" } })
                                                            <div class="input-group-append">
                                                                <button type="button" id="btn-ClientFileNo" class="btn btn-warning" onclick="generate_modal_body('ClientFileNo')">CHECK</button>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.ParentCourtId)
                                                    @Html.DropDownList("ParentCourtId", null, htmlAttributes: new { @class = "form-control select2bs4", @tabindex = "13" })
                                                </div>
                                                <div class="col-sm-12">
                                                    <div class="row">
                                                        @Html.LabelFor(model => model.ODBBankBranch)
                                                        <div class="input-group mb-3">
                                                            @Html.DropDownList("ODBBankBranch", null, htmlAttributes: new { @class = "form-control select2bs4", @tabindex = "16" })
                                                            <div class="input-group-append">
                                                                <button type="button" class="btn btn-info AddNewMaster" id="18">
                                                                    ADD
                                                                </button>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-sm-4">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.LegalNoticeDate)
                                                    @Html.EditorFor(model => model.LegalNoticeDate, new { htmlAttributes = new { @class = "form-control datepicker", @tabindex = "2" } })
                                                    @Html.ValidationMessageFor(model => model.LegalNoticeDate, "", new { @class = "text-danger" })
                                                </div>
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.AgainstCode)
                                                    @Html.DropDownList("AgainstCode", null, htmlAttributes: new { @class = "form-control select2bs4", @tabindex = "5" })
                                                </div>
                                                <div class="col-sm-12">
                                                    <div class="row">
                                                        @Html.LabelFor(model => model.CRRegistrationNo)
                                                        <div class="input-group mb-3">
                                                            @Html.EditorFor(model => model.CRRegistrationNo, new { htmlAttributes = new { @class = "form-control", @tabindex = "8" } })
                                                            <div class="input-group-append">
                                                                <button type="button" id="btn-CRRegistrationNo" class="btn btn-warning" onclick="generate_modal_body('CRRegistrationNo')">CHECK</button>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-sm-12">
                                                        <div class="form-group">
                                                            @Html.LabelFor(model => model.ClaimAmount)
                                                            @Html.EditorFor(model => model.ClaimAmount, new { htmlAttributes = new { @class = "form-control", @tabindex = "11" } })
                                                        </div>
                                                        @*<div class="col-sm-4">
                    <div style="padding-top:35px;" class="form-group clearfix">
                        <div class="icheck-primary d-inline">
                            @Html.CheckBoxFor(model => model.IsCommission)
                            @Html.LabelFor(model => model.IsCommission)
                        </div>
                    </div>
                </div>
                <div class="col-sm-4">
                    <div style="padding-top:35px;" class="form-group clearfix">
                        <div class="icheck-primary d-inline">
                            @Html.CheckBoxFor(model => model.IsPrivateFee)
                            @Html.LabelFor(model => model.IsPrivateFee)
                        </div>
                    </div>
                </div>*@
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.CaseLevelCode)
                                                    @Html.DropDownList("CaseLevelCode", null, htmlAttributes: new { @class = "form-control select2bs4", @tabindex = "14" })
                                                </div>
                                                <div class="col-sm-12">
                                                    <div class="row">
                                                        @Html.LabelFor(model => model.LoanManager)
                                                        <div class="input-group mb-3">
                                                            @Html.DropDownList("LoanManager", null, htmlAttributes: new { @class = "form-control select2bs4", @tabindex = "17" })
                                                            <div class="input-group-append">
                                                                <button type="button" class="btn btn-info AddNewMaster" id="428">
                                                                    ADD
                                                                </button>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-sm-12">
                                                <div class="row p-1">
                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.SpecialInstructions)
                                                        @Html.TextAreaFor(model => model.SpecialInstructions, 3, 200, new { @class = "form-control", @placeholder = "PLEASE ENTER SPECIAL INSTRUCTIONS", @tabindex = "17" })
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="tab-pane fade" id="tabs-BeforeCourt" role="tabpanel" aria-labelledby="BeforeCourt-tab">
                                        <div class="row">
                                            <div class="col-sm-12">
                                                <div class="form-group clearfix">
                                                    <div class="icheck-primary d-inline">
                                                        <input type="radio" id="radioPrimary1" value="1" name="r1">
                                                        <label for="radioPrimary1">
                                                            POLICE NO
                                                        </label>
                                                    </div>
                                                    <div class="icheck-primary d-inline">
                                                        <input type="radio" id="radioPrimary2" value="2" name="r1">
                                                        <label for="radioPrimary2">
                                                            PUBLIC PROSECUTION NO
                                                        </label>
                                                    </div>
                                                    <div class="icheck-primary d-inline">
                                                        <input type="radio" id="radioPrimary3" value="3" name="r1">
                                                        <label for="radioPrimary3">
                                                            PAPC NO
                                                        </label>
                                                    </div>
                                                    <div class="icheck-primary d-inline">
                                                        <input type="radio" id="radioPrimary4" value="4" name="r1">
                                                        <label for="radioPrimary4">
                                                            LABOR CONFLIC NO
                                                        </label>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-12">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.YandSNotes)
                                            @Html.TextAreaFor(model => model.YandSNotes, 4, 200, new { @class = "form-control", @placeholder = "PLEASE ENTER NOTES" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- /.card-body -->
                <div class="card-footer text-center">
                    <button type="submit" class="btn btn-secondary"><i class="fas fa-save"></i> SAVE</button>
                    <button title="Back to Case List" class="btn btn-secondary" onclick="location.href='@Url.Action("Index","CourtCases")';return false;" id=@Model.CaseId> <i class="fas fa-home"></i> BACK TO LIST</button>
                    <button id=@Model.CaseId title="Primary Court Management" class="btn btn-secondary" onclick="location.href='@Url.Action("ManageCourtDetail", "CourtCases", new { CaseId = Model.CaseId, Courtid = "1" })';return false;"> <i class="fas fa-globe-europe"></i> TO PRIMARY</button>
                    <button id=@Model.CaseId title="Apeal Court Management" class="btn btn-secondary" onclick="location.href='@Url.Action("ManageCourtDetail", "CourtCases", new { CaseId = Model.CaseId, Courtid = "2" })';return false;"> <i class="fas fa-globe-europe"></i> TO APPEAL</button>
                    <button id=@Model.CaseId title="Supreme Court Management" class="btn btn-secondary" onclick="location.href='@Url.Action("ManageCourtDetail", "CourtCases", new { CaseId = Model.CaseId, Courtid = "3" })';return false;"> <i class="fas fa-globe-europe"></i> TO SUPREME</button>
                    <button id=@Model.CaseId title="Enforcement Management" class="btn btn-secondary" onclick="location.href='@Url.Action("ManageEnforcementDetail", "CourtCases", new { CaseId = Model.CaseId })';return false;"> <i class="fas fa-globe-europe"></i> TO ENFORCEMENT</button>
                    <button id=@Model.CaseId title="Create Invoice" class="btn btn-secondary" onclick="location.href='@Url.Action("InvoiceCreate", "Finance", new { id = Model.CaseId })';return false;"> <i class="fas fa-file-invoice-dollar"></i> ADD INVOICE</button>
                    <button id=@Model.CaseId title="Create Case" class="btn btn-secondary" onclick="location.href='@Url.Action("Create", "CourtCases")';return false;"> <i class="fas fa-plus-circle"></i> CREATE CASE</button>
                    @*<button id=@Model.CaseId title="Form Closure" class="btn btn-secondary" onclick="location.href='@Url.Action("ClosureFormView", "CourtCases", new { CaseId = Model.CaseId, Courtid = "",ClosureDate = Model.CaseStatusDate })';return false;"><i class="fas fa-file-invoice-dollar"></i> FORM CLOSURE</button>*@

                </div>

            </div>
        }
    </section>
    <!-- /.content -->
    <div class="modal fade" id="modal-ViewDefendent">
        <div class="modal-dialog modal-xl">
            <div class="modal-content bg-gradient-light">
                <div class="modal-header">
                    <h4 class="modal-title">CHECK DETAIL</h4>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">×</span>
                    </button>
                </div>
                <div class="card-body">
                    <table id="tblDefaulterDetail" class="table table-bordered table-striped dataTable dt-responsive nowrap" style="width:100%">
                        <thead>
                            <tr>
                                <th>Office File No</th>
                                <th>Account Contract No</th>
                                <th>Client File No</th>
                                <th>Defendant</th>
                                <th>Case Status</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
                <div class="modal-footer justify-content-between">
                    <button type="button" class="btn btn-outline-dark" data-dismiss="modal">Close</button>
                </div>
            </div>
            <!-- /.modal-content -->
        </div>
        <!-- /.modal-dialog -->
    </div>
    <div class="modal fade" id="modal-AddMasterValue">
        <div class="modal-dialog">
            <div class="modal-content bg-gradient-light">
                <div class="modal-header">
                    <h4 class="modal-title"><span id="ModalTitle">Add Client</span></h4>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">×</span>
                    </button>
                </div>
                <div class="modal-body">
                    <input type="hidden" id="MstParentId" class="form-control" value="@ViewBag.MstParentId" />
                    <input type="text" id="MstDesc" class="form-control" placeholder="Enter New Description" />
                </div>
                <div class="modal-footer justify-content-between">
                    <button type="button" class="btn btn-outline-dark" data-dismiss="modal">Close</button>
                    <button type="button" onclick="ProcessAddClient()" class="btn btn-outline-dark">Save changes</button>
                </div>
            </div>
            <!-- /.modal-content -->
        </div>
        <!-- /.modal-dialog -->
    </div>

</div>
@{
    string HiddenVal = string.Empty;
    int loopCnt = 0;
}
@if (Model.DetailId != null)
{

    if (Model.DetailId.OrderBy(o => o.Courtid).Count() > 0)
    {

        foreach (var item in Model.DetailId)
        {
            if (loopCnt == 0)
            {
                HiddenVal = item.Courtid;
            }
            else
            {
                HiddenVal = HiddenVal + "-" + item.Courtid;
            }
            loopCnt++;
        }
    }
}
<input type="hidden" id="hidCourtDetail" value="@HiddenVal" />

@section pagespecific {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
        var PrimaryLoaded = false;
        var ApealLoaded = false;
        var SupremeLoaded = false;
        var EnforcementLoaded = false;
        var TabName = "";
        var CourtDetailContainer = $("#div-Primary");
        var ListFollowupContainer = $("#div-Primary-ListFollowup");
        var CreateFollowupContainer = $("#div-Primary-CreateFollowup");
        var P_Courtid = "0";
        var P_hidCourtDetail = "";
        var P_CaseId = 0;
        var P_Detail = 0;
        var _parameters = {};
        var ArrayCourts = [];

        var GetCourtDetailURL = '@Url.Action("GetTab", "CourtCases", new { area = string.Empty })';
        var CreateCourtDetailURL = '@Url.Action("CreateCourtDetail", "CourtCases", new { area = string.Empty })';
        var CreatePrimaryCourtDetailURL = '@Url.Action("CreatePrimaryCourtDetail", "CourtCases", new { area = string.Empty })';
        var CreateApealCourtDetailURL = '@Url.Action("CreateApealCourtDetail", "CourtCases", new { area = string.Empty })';
        var CreateSupremeCourtDetailURL = '@Url.Action("CreateSupremeCourtDetail", "CourtCases", new { area = string.Empty })';
        var CreateEnforcementCourtDetailURL = '@Url.Action("CreateEnforcementCourtDetail", "CourtCases", new { area = string.Empty })';
        var GetListFollowupURL = '@Url.Action("GetHearingDetail", "CourtCases", new { area = string.Empty })';
        var CreateFollowupURL = '@Url.Action("CreateCourtFollowup", "CourtCases", new { area = string.Empty })';
        var LoadCaseStatusURL = '@Url.Action("GetCaseStatusDetail", "CourtCases", new { area = string.Empty })';

        var CreateMasterTableDetailURL = '@Url.Action("CreateMasterTableDetail", "CommonTask", new { area = string.Empty })';
        var GetDefaulterDetailURL = '@Url.Action("GetDefaulterDetail", "CourtCases", new { area = string.Empty })';
        var DefendentTable;
        var DDLToAppend;

        function ProcessAddClient() {
            if ($("#MstDesc").val() != "") {
                console.log(parseInt($("#MstParentId").val()));
                console.log($("#MstDesc").val());
                var _MstDesc = $("#MstDesc").val();
                var _MstParentId = parseInt($("#MstParentId").val());

                _parameters = { Mst_Desc: _MstDesc, MstParentId: _MstParentId };
                $.ajax({
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    dataType: 'json',
                    data: JSON.stringify(_parameters),
                    url: CreateMasterTableDetailURL,
                    success: function (Result) {

                        if (Result.Message == "Success") {
                            var newOption = new Option(Result.name, Result.id, true, true);
                            DDLToAppend.append(newOption).trigger('change');
                            $('#modal-AddMasterValue').modal('hide');

                        }
                        else {
                            $('#modal-AddMasterValue').modal('hide');
                            Swal.fire({
                                type: "error",
                                title: 'Error...',
                                html: Result.ErrorMessage
                            });
                        }
                    }
                });
            }
            else {
                // Failed show errors
                console.log("Failed errors");
                Swal.fire({
                    type: "error",
                    title: 'Error...',
                    html: 'Please Enter Description of List'
                });            }
        }
        function generate_modal_body(ModalToGenerateId) {
            //var ModalToGenerateId = this.id.split('-')[1] ;
            var ModalToGenerate = $("#" + ModalToGenerateId).val();

            if (ModalToGenerate != "") {
                console.log(ModalToGenerate);

                if (typeof DefendentTable != 'undefined')
                    DefendentTable.destroy();

                DefendentTable = $('#tblDefaulterDetail').DataTable({
                    lengthChange: false,
                    ajax: {
                        url: GetDefaulterDetailURL,
                        "dataSrc": "",
                        type: 'POST',
                        data: function (d) {
                            d.P_DataParameter = ModalToGenerate;
                            d.P_DataFor = ModalToGenerateId;
                        }
                    },
                    "columns": [
                        { data: 'OfficeFileNo' },
                        { data: 'AccountContractNo' },
                        { data: 'ClientFileNo' },
                        { data: 'Defendant' },
                        { data: 'CaseStatusName' }
                    ],
                    initComplete: function () {
                        $('#modal-ViewDefendent').modal('show');
                    }
                });

            }
            else {
                // Failed show errors
                console.log("Failed ModalToGenerate is null");
                //$('#modal-ViewDefendent').modal('hide');
                Swal.fire({
                    type: "error",
                    title: 'Error...',
                    html: 'Please Enter ' + ModalToGenerateId
                });
            }
        }
        function onPreSubmit(item) {
            console.log(item);
            console.log($('input[name=r1]:checked').val());

            $("#SelectedBeforeCourt").val($('input[name=r1]:checked').val());
        }

        $(document).ready(function () {
            console.log("Edit Case Page");
           

            $('.AddNewMaster').on("click", function () {
                console.log(this.id);
                console.log($(this).val());
                var ModalTitle = "";
                $("#MstParentId").val(this.id);

                if (this.id == "241") {
                    ModalTitle = "Add Client";
                    DDLToAppend = $("#ClientCode");
                }
                else if (this.id == "285") {
                    ModalTitle = "Add Client Case Type";
                    DDLToAppend = $("#ClientCaseType");
                }
                else if (this.id == "16") {
                    ModalTitle = "Add ODB Loan";
                    DDLToAppend = $("#ODBLoanCode");
                }
                else if (this.id == "18") {
                    ModalTitle = "Add ODB Bank Branch";
                    DDLToAppend = $("#ODBBankBranch");
                }
                else if (this.id == "428") {
                    ModalTitle = "Add Loan Manager";
                    DDLToAppend = $("#LoanManager");
                }

                $("#ModalTitle").text(ModalTitle);

                $('#modal-AddMasterValue').modal('show');

            });

            Array.prototype.max = function () {
                return Math.max.apply(null, this);
            };

            Array.prototype.min = function () {
                return Math.min.apply(null, this);
            };

            P_CaseId = parseInt($("#CaseId").val());
            P_hidCourtDetail = $("#hidCourtDetail").val();

            console.log("P_CaseId");
            console.log(P_CaseId);
            console.log("P_hidCourtDetail");
            console.log(P_hidCourtDetail);

            if (P_hidCourtDetail != "") {
                console.log("Court Information found");

                ArrayCourts = P_hidCourtDetail.split("-");

                console.log("Total Court Found " + ArrayCourts.length);


                //var i;
                if (ArrayCourts.length > 0) {
                    console.log("Max value is: " + ArrayCourts.max() + "\nMin value is: " + ArrayCourts.min());


                }
                else
                    console.log("Error! 0 Length Array");

            }
            else {
                console.log("No Court Information found");
                console.log("No Restriction need to be implement");
            }

            bsCustomFileInput.init();
            var AgainstCode = $('#AgainstCode').val();


            if (AgainstCode == "3") {
                $("#divDefClient").removeClass("AppHidden");
                $("#divDefendant").removeClass("AppHidden").addClass("AppHidden");

            }
            else {
                $("#divDefClient").removeClass("AppHidden").addClass("AppHidden");
                $("#divDefendant").removeClass("AppHidden");
            }

            $('#AgainstCode').on("change", function () {
                console.log(this.id);
                console.log($(this).val());

                if ($(this).val() == "3") {
                    $("#divDefClient").removeClass("AppHidden");
                    $("#divDefendant").removeClass("AppHidden").addClass("AppHidden");

                    //$("#DefClientCode").val("0").trigger('change');
                    //$("#Defendant").val("");


                }
                else {
                    $("#divDefClient").removeClass("AppHidden").addClass("AppHidden");
                    $("#divDefendant").removeClass("AppHidden");

                    //$("#DefClientCode").val("0").trigger('change');
                    //$("#Defendant").val("");

                }
            });


            /*Loading Primary, Apeal, supreme and enforcement*/
            $('a[data-toggle="pill"]').on('shown.bs.tab', function (e) {
                console.log(e);
                var target = $(e.target).attr("href");
                console.log(target);

                if (target == "#tabs-Primary") {
                    CreateFollowupContainer.empty();
                    P_Courtid = "1";
                    TabName = "div-Primary";

                    CourtDetailContainer = $("#" + TabName);
                    ListFollowupContainer = $("#" + TabName + "-ListFollowup");
                    CreateFollowupContainer = $("#" + TabName + "-CreateFollowup");

                    if (PrimaryLoaded) {
                        P_Detail = parseInt($("#Primary_DetailId").val());

                        if (P_Detail == 0) {
                            console.log("No Court Primary_DetailId found! :: _CourtPView_Primary Partial Page");
                        }

                        LoadHearings(P_Detail);
                    }
                    else {
                        _parameters = { CaseId: P_CaseId, Courtid: P_Courtid };

                        GetTab(CourtDetailContainer, GetCourtDetailURL, _parameters);
                        PrimaryLoaded = true;
                    }


                }
                else if (target == "#tabs-Apeal") {
                    CreateFollowupContainer.empty();
                    P_Courtid = "2";
                    TabName = "div-Apeal";

                    CourtDetailContainer = $("#" + TabName);
                    ListFollowupContainer = $("#" + TabName + "-ListFollowup");
                    CreateFollowupContainer = $("#" + TabName + "-CreateFollowup");

                    if (ApealLoaded) {
                        P_Detail = parseInt($("#Apeal_DetailId").val());

                        if (P_Detail == 0) {
                            console.log("No Court Detail found! :: _CourtPView_Apeal Partial Page");
                        }

                        LoadHearings(P_Detail);
                    }
                    else {
                        _parameters = { CaseId: P_CaseId, Courtid: P_Courtid };

                        GetTab(CourtDetailContainer, GetCourtDetailURL, _parameters);

                        ApealLoaded = true;

                    }

                }
                else if (target == "#tabs-Supreme") {
                    CreateFollowupContainer.empty();
                    P_Courtid = "3";
                    TabName = "div-Supreme";

                    CourtDetailContainer = $("#" + TabName);
                    ListFollowupContainer = $("#" + TabName + "-ListFollowup");
                    CreateFollowupContainer = $("#" + TabName + "-CreateFollowup");

                    if (SupremeLoaded) {
                        P_Detail = parseInt($("#Supreme_DetailId").val());

                        if (P_Detail == 0) {
                            console.log("No Court Detail found! :: _CourtPView_Supreme Partial Page");
                        }

                        LoadHearings(P_Detail);
                    }
                    else {
                        _parameters = { CaseId: P_CaseId, Courtid: P_Courtid };

                        GetTab(CourtDetailContainer, GetCourtDetailURL, _parameters);

                        SupremeLoaded = true;
                    }

                }
                else if (target == "#tabs-Enforcement") {
                    CreateFollowupContainer.empty();
                    P_Courtid = "4";
                    TabName = "div-Enforcement";
                    CourtDetailContainer = $("#" + TabName);
                    ListFollowupContainer = $("#" + TabName + "-ListFollowup");
                    CreateFollowupContainer = $("#" + TabName + "-CreateFollowup");


                    if (EnforcementLoaded) {
                        P_Detail = parseInt($("#Enforcement_DetailId").val());

                        if (P_Detail == 0) {
                            console.log("No Court Detail found! :: _CourtPView_Enforcement Partial Page");
                        }
                        LoadHearings(P_Detail);
                    }
                    else {
                        _parameters = { CaseId: P_CaseId, Courtid: P_Courtid };

                        GetTab(CourtDetailContainer, GetCourtDetailURL, _parameters);

                        EnforcementLoaded = true;
                    }
                }
                
            });

            if ($("#SelectedBeforeCourt").val() == "1")
                $("#radioPrimary1").prop("checked", true);
            else if ($("#SelectedBeforeCourt").val() == "2")
                $("#radioPrimary2").prop("checked", true);
            else if ($("#SelectedBeforeCourt").val() == "3")
                $("#radioPrimary3").prop("checked", true);
            else if ($("#SelectedBeforeCourt").val() == "4")
                $("#radioPrimary4").prop("checked", true);

        });
    </script>

}