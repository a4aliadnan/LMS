@model YandS.UI.Models.CaseRegistrationVM
<script type="text/javascript">
    $(document).ready(function () {
        console.log("Modify To be Register Partail View Document Page");
        console.log($("#hidCaseRegistrationId").val());
        console.log($("#HFCaseId").val());

        $('.datepicker').datepicker({
            format: "dd/mm/yyyy",
            todayBtn: "linked",
            clearBtn: true,
            autoclose: true,
            orientation: "bottom auto"
        });

        $('.select2bs4').select2({
            theme: 'bootstrap4'
        });
        $.fn.autoResize = function () {
            let r = e => {
                e.style.height = '';
                e.style.height = e.scrollHeight + 'px'
            };
            return this.each((i, e) => {
                e.style.overflow = 'hidden';
                r(e);
                $(e).bind('input', e => {
                    r(e.target);
                })
            })
        };

        LoadFileStatusPV($('#FileStatus').val());

        $('#FileStatus').on("change", function () {
            LoadFileStatusPV($('#FileStatus').val());
        });

        $('#btnClear').on("click", function () {
            $("#Remarks").val("");
        });

        $('#btnSubmitFormTBR').on("click", function () {
            ValidationMessage = "";
            NotValid = false;

            NotValid = ValidateTBRMain();

            if (NotValid) {
                Swal.fire({
                    type: "error",
                    title: 'ERROR...',
                    html: ValidationMessage
                });
                return false;
            }

            if ($("#FileStatus").val() == "1") {
                NotValid = ValidateTransferred();
            }
            else if ($("#FileStatus").val() == "2") {
                NotValid = ValidateLegalNotice();
            }
            else if ($("#FileStatus").val() == "3") {
                NotValid = ValidateWritingSubmission();
            }
            else if ($("#FileStatus").val() == "4") {
                NotValid = ValidateOnHold();
            }
            else if ($("#FileStatus").val() == "5") {
                NotValid = ValidateScanned();
            }
            else if ($("#FileStatus").val() == "6") {
                NotValid = ValidateOnlineSubmission();
            }
            else if ($("#FileStatus").val() == "7") {
                NotValid = ValidateCourtNotes();
            }
            else if ($("#FileStatus").val() == "8") {
                NotValid = ValidatePayment();
            }
            else if ($("#FileStatus").val() == "9") {
                NotValid = ValidateRegistered();
            }
            else if ($("#FileStatus").val() == "11") {
                NotValid = ValidateStopRegistration();
            }
            else if ($("#FileStatus").val() == "12") {
                NotValid = ValidateWithLawyer();
            }

            if (NotValid) {
                Swal.fire({
                    type: "error",
                    title: 'ERROR...',
                    html: ValidationMessage
                });
                return false;
            }
            ShowPreSubmit();
            /*
            Swal.fire({
                title: 'CLIENT REPLY',
                html: 'WAITING FOR THE CLIENT’S RESPONSE',
                type: 'info',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'نعم YES',
                cancelButtonText: 'لا NO',
            }).then((result) => {
                if (result.value) {
                    console.log(result.value);

                    NotValid = ValidateUpdateDate();

                    if (NotValid) {
                        Swal.fire({
                            title: 'Are you sure?',
                            html: ValidationMessage,
                            type: 'info',
                            showCancelButton: true,
                            confirmButtonColor: '#d33',
                            cancelButtonColor: '#3085d6',
                            confirmButtonText: 'تغييرالتاريخ والحفظ CHANGE',
                            cancelButtonText: 'حفظ بدون تغيير CONTUNUE',
                        }).then((result) => {
                            if (result.value) {

                                $("#CurrentHearingDate").datepicker("setDate", new Date).datepicker({
                                    format: 'dd/mm/yyyy',
                                    autoclose: true
                                });

                                ValidationMessage = "";
                                NotValid = false;

                                NotValid = ValidateNextHearingDate();

                                if (NotValid) {
                                    Swal.fire({
                                        title: 'Are you sure?',
                                        html: ValidationMessage,
                                        type: 'info',
                                        showCancelButton: true,
                                        confirmButtonColor: '#3085d6',
                                        cancelButtonColor: '#d33',
                                        confirmButtonText: 'SAVE حفظ',
                                        cancelButtonText: 'BACK عودة',
                                    }).then((result) => {
                                        if (result.value) {
                                            submitForm();
                                        }
                                        else {
                                            return false;
                                        }
                                    });
                                }
                                else {
                                    submitForm();
                                }
                            }
                            else {
                                submitForm();
                            }
                        });
                    }
                    else {
                        NotValid = ValidateNextHearingDate();

                        if (NotValid) {
                            Swal.fire({
                                title: 'Are you sure?',
                                html: ValidationMessage,
                                type: 'info',
                                showCancelButton: true,
                                confirmButtonColor: '#3085d6',
                                cancelButtonColor: '#d33',
                                confirmButtonText: 'SAVE حفظ',
                                cancelButtonText: 'BACK عودة',
                            }).then((result) => {
                                if (result.value) {
                                    submitForm();
                                }
                                else {
                                    return false;
                                }
                            });
                        }
                        else {
                            submitForm();
                        }
                    }

                }
                else {
                    $("#ClientReply").val("").trigger('change');
                    $("#Requirements").val("");
                    $("#FirstEmailDate").val("");

                    NotValid = ValidateUpdateDate();

                    if (NotValid) {
                        Swal.fire({
                            title: 'Are you sure?',
                            html: ValidationMessage,
                            type: 'info',
                            showCancelButton: true,
                            confirmButtonColor: '#d33',
                            cancelButtonColor: '#3085d6',
                            confirmButtonText: 'تغييرالتاريخ والحفظ CHANGE',
                            cancelButtonText: 'حفظ بدون تغيير CONTUNUE',
                        }).then((result) => {
                            if (result.value) {

                                $("#CurrentHearingDate").datepicker("setDate", new Date).datepicker({
                                    format: 'dd/mm/yyyy',
                                    autoclose: true
                                });

                                ValidationMessage = "";
                                NotValid = false;

                                NotValid = ValidateNextHearingDate();

                                if (NotValid) {
                                    Swal.fire({
                                        title: 'Are you sure?',
                                        html: ValidationMessage,
                                        type: 'info',
                                        showCancelButton: true,
                                        confirmButtonColor: '#3085d6',
                                        cancelButtonColor: '#d33',
                                        confirmButtonText: 'SAVE حفظ',
                                        cancelButtonText: 'BACK عودة',
                                    }).then((result) => {
                                        if (result.value) {
                                            submitForm();
                                        }
                                        else {
                                            return false;
                                        }
                                    });
                                }
                                else {
                                    submitForm();
                                }
                            }
                            else {
                                submitForm();
                            }
                        });
                    }
                    else {
                        NotValid = ValidateNextHearingDate();

                        if (NotValid) {
                            Swal.fire({
                                title: 'Are you sure?',
                                html: ValidationMessage,
                                type: 'info',
                                showCancelButton: true,
                                confirmButtonColor: '#3085d6',
                                cancelButtonColor: '#d33',
                                confirmButtonText: 'SAVE حفظ',
                                cancelButtonText: 'BACK عودة',
                            }).then((result) => {
                                if (result.value) {
                                    submitForm();
                                }
                                else {
                                    return false;
                                }
                            });
                        }
                        else {
                            submitForm();
                        }
                    }
                }
            });
            */
        });

        if ($("#hidTBRRemarks").val() == "N")
            $("#DIV_REMARKS").removeClass("AppHidden").addClass("AppHidden");
        else {
            $("#DIV_REMARKS").removeClass("AppHidden");
            $('textarea').autoResize();
        }


        $("#txtRequirement").removeClass("AppHidden").addClass("AppHidden");
        $("#txtFirstEmailDate").removeClass("AppHidden").addClass("AppHidden");
        $("#DIV_TRSOURCE").removeClass("AppHidden").addClass("AppHidden");
        $('textarea').autoResize();

        if ($('#ClientReply').val() == "1") {
            $("#txtRequirement").removeClass("AppHidden");
            $("#txtFirstEmailDate").removeClass("AppHidden");

            $("#hidRequirement").val($("#Requirements").val());
            $("#hidFirstEmailDate").val($("#FirstEmailDate").val());

            if ($("#FirstEmailDate").val() == "") {
                $("#FirstEmailDate").datepicker("setDate", new Date());
            }
            $('textarea').autoResize();

        }
        if ($('#TransportationFee').val() == "1") {
            $("#DIV_TRSOURCE").removeClass("AppHidden");
        }

        ShowInvesmentBanner();

        $('#ClientReply').on("change", function () {
            $("#txtRequirement").removeClass("AppHidden").addClass("AppHidden");
            $("#txtFirstEmailDate").removeClass("AppHidden").addClass("AppHidden");

            if ($('#ClientReply').val() == "1") {
                $("#txtRequirement").removeClass("AppHidden");
                $("#txtFirstEmailDate").removeClass("AppHidden");

                if ($("#Requirements").val() == "" && $("#FirstEmailDate").val() == "") {
                    console.log($("#hidRequirement").val());
                    console.log($("#hidFirstEmailDate").val());
                    $("#Requirements").val($("#hidRequirement").val());
                    $("#FirstEmailDate").datepicker("setDate", $("#hidFirstEmailDate").val());
                }
                $('textarea').autoResize();

            }
            else {
                $("#FirstEmailDate").val("");
                $("#Requirements").val("");
            }
        });

        $('#DepartmentType').on("change", function () {
            ShowInvesmentBanner();
        });
    });

</script>
@using (Html.BeginForm("IndexMain", "CaseRegistration", FormMethod.Post, new { enctype = "multipart/form-data", id = "frm_CaseRegister" }))
{
    @Html.HiddenFor(model => model.CaseId)
    @Html.HiddenFor(model => model.CaseRegistrationId, new { @Value = ViewBag.CaseRegistrationId })
    @Html.HiddenFor(model => model.ActionLevel)
    @Html.HiddenFor(model => model.JudgementDate)
    @Html.HiddenFor(model => model.OnHoldDone)
    @Html.HiddenFor(model => model.OfficeFileNo)
    @Html.HiddenFor(model => model.SessionRollId)
    @Html.HiddenFor(model => model.TransportationFee)

    @Html.AntiForgeryToken()
    if (int.Parse(Model.ActionLevel) == 1 && int.Parse(Model.EnforcementDispute) == 0)
    {
        ViewBag.BannerDate = Model.ReceptionDate;
    }
    else if ((int.Parse(Model.ActionLevel) == 2 || int.Parse(Model.ActionLevel) == 3) && int.Parse(Model.EnforcementDispute) == 0)
    {
        ViewBag.BannerDate = Model.JudgementDate?.ToString("dd/MM/yyyy");
    }
    <div class="card">
        <div class="card-body">
            <div class="card-header CaseInformationBar">
                <div class="row">
                    <div class="col-1"></div>
                    <div class="col-10 text-center">
                        @if (int.Parse(Model.EnforcementDispute) == 0)
                        {
                            <div class="row">
                                <h3>@Html.DisplayFor(model => model.OfficeFileNo)<span class="YandSTitleSpacing2">-</span>@Html.DisplayFor(model => model.ClientName)<span class="YandSTitleSpacing2">-</span>@Html.DisplayFor(model => model.Defendant)<span class="YandSTitleSpacing2">-</span>@Html.DisplayFor(model => model.AccountContractNo)<span class="YandSTitleSpacing2">-</span>@Html.DisplayFor(model => model.ClientFileNo)<span class="YandSTitleSpacing2">-</span>@ViewBag.BannerDate</h3>
                            </div>
                        }
                        else
                        {
                            <div class="row">
                                <h3>@Html.DisplayFor(model => model.OfficeFileNo)<span class="YandSTitleSpacing2">-</span>@Html.DisplayFor(model => model.ClientName)<span class="YandSTitleSpacing2">-</span>@Html.DisplayFor(model => model.Defendant)<span class="YandSTitleSpacing2">-</span>@Html.DisplayFor(model => model.AccountContractNo)<span class="YandSTitleSpacing2">-</span>@Html.DisplayFor(model => model.ClientFileNo)<span class="YandSTitleSpacing2">-</span>@Html.DisplayFor(model => model.ENFCourtRefNo)<span class="YandSTitleSpacing2">-</span>@Html.DisplayFor(model => model.ENFCourtLocationName)</h3>
                            </div>
                        }
                    </div>
                    <div class="col-1"><span style="float:right"><a title="PRINT FORM" id="PrintFormButton" class="btn btn-lg btn-ToBeRegBanner-print" target="_blank" href="/CaseRegistration/PrintForm/@Model.CaseRegistrationId">PRINT FORM</a></span></div>
                </div>
            </div>
            <div id="DIV_INVESTMENT_BANNER" class="card-header GeneralActive AppHidden">
                <div class="row">
                    <div class="col-12 text-center">
                        <h3><span>APPEAL WITHIN </span><span class="YandSTitleSpacing">(15 يوم)</span><span>مدةالإستئناف</span></h3>

                    </div>
                </div>
            </div>
            <div class="card">
                <div class="card-body">
                    @if (int.Parse(Model.ActionLevel) == 2)
                    {
                        <div class="row">
                            <div class="col-sm-3">
                                <div class="form-group">
                                    <label for="DepartmentType">INVESTMENT تبسيط الإجراءات</label>
                                    @Html.DropDownList("DepartmentType", null, htmlAttributes: new { @class = "form-control select2bs4" })
                                </div>
                            </div>
                        </div>
                    }
                    else
                    {
                        if (int.Parse(Model.ActionLevel) > 1)
                        {
                            @Html.HiddenFor(model => model.DepartmentType)
                        }

                        if (int.Parse(Model.ActionLevel) == 4)
                        {
                            @Html.HiddenFor(model => model.EnforcementDispute)

                            <div class="row">
                                <div class="col-sm-3">
                                    <div class="form-group">
                                        <label for="DisputeLevel">ENFORCEMENT DISPUTE</label>
                                        @Html.DropDownList("DisputeLevel", null, htmlAttributes: new { @class = "form-control select2bs4" })
                                    </div>
                                </div>
                                <div class="col-sm-3">
                                    <div class="form-group">
                                        <label for="DisputeType">DISPUTE منازعة تنفيذ</label>
                                        @Html.DropDownList("DisputeType", null, htmlAttributes: new { @class = "form-control select2bs4" })
                                    </div>
                                </div>
                            </div>
                        }
                        else
                        {
                            @Html.HiddenFor(model => model.DisputeLevel)
                            @Html.HiddenFor(model => model.DisputeType)
                        }
                    }
                    <div class="row">
                        <div class="col-sm-3">
                            <div class="form-group">
                                <label for="FormPrintWorkRequired">WORK REQUIRED العمل المطلوب</label>
                                @Html.EditorFor(model => model.FormPrintWorkRequired, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label for="OfficeProcedure">NOTES الملاحظات</label>
                                @Html.TextAreaFor(model => model.OfficeProcedure, 1, 200, new { @class = "form-control", @dir = "auto", @placeholder = "Please Enter Notes" })

                            </div>
                        </div>
                        <div class="col-sm-3">
                            <div class="form-group">
                                <label for="FormPrintLastDate">LAST DATE الإنجاز قبل</label>
                                @Html.EditorFor(model => model.FormPrintLastDate, new { htmlAttributes = new { @class = "form-control datepicker" } })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-3">
                            <div class="form-group">
                                <label style="color:red" for="FileStatus">FILE STATUS حالة الملف</label>
                                @Html.DropDownList("FileStatus", null, htmlAttributes: new { @class = "form-control select2bs4" })
                            </div>

                        </div>
                    </div>
                </div>
            </div>
            <div class="card card-danger card-outline">
                <div class="card-body">
                    <div id="TBR_Modify_Detail">

                    </div>
                    <div class="row">
                        <div id="DIV_REMARKS" class="col-sm-12">
                            @Html.Partial("_TBR_REMARKS", Model)
                        </div>
                    </div>
                    <div class="row">
                        @Html.Partial("_TBR_UPDATED", Model)
                    </div>
                </div>
            </div>
        </div>
        <div class="card-footer text-center">
            <button type="button" id="btnSubmitFormTBR" class="btn btn-secondary"><i class="fas fa-save"></i> SAVE</button>
        </div>
    </div>
}
<input type="hidden" id="hidCaseRegistrationId" value="@ViewBag.CaseRegistrationId" />
